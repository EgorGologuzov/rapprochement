package com.nti.rapprochement.domain.contracts;

import android.graphics.Bitmap;

import java.util.ArrayList;
import java.util.function.Consumer;

/**
 * Интерфейс для сохранения пользовательских жестов по последовательности снимков
 *
 * Сценарий использования интерфейса во фронтенд части:
 * 1. Фронт попросит пользователя сделать последовательность снимков жеста в разных позициях и
 * ввести имя жеста
 * 2. Когда пользователь введет все данные фронт вызовет метод saveGesture, передаст туда имя,
 * снимки, вращение снимков и колбек для получения результата сохранения
 * 3. Фронт будет ожидать вызова колбека с результатом, в это время пользователь не сможет ничего
 * делать
 *
 * Пример реализации интерфейса: /implementations/FakeGestureStorage.java
 */
public interface IGestureStorage {

    /**
     * Перечисление для всех возможных результатов попытки сохранения жеста
     * Success - если сохранения успешно, соответсвующая ошибка в ином случае
     */
    enum SaveStatus {
        Success,
        InvalidName
        // и так далее
    }

    /**
     * Метод сохранения жеста по последовательности снимков
     *
     * @param gestureName имя жеста, введенное пользователем
     * @param snapshots массив снимков жеста (без обработки), сделанных пользователем
     * @param snapshotsRotation угол вращения снимков (в градусах), полученных с камеры
     * @param cb колбек для передачи результат сохранения фронту, результат равен Success при
     *           успешном сохранеии или значению соответсвующей ошибки при неудаче
     */
    void saveGesture(String gestureName, ArrayList<Bitmap> snapshots, float snapshotsRotation, Consumer<SaveStatus> cb);

    /**
     * Метод утилизации. Будет вызываться, когда Storage больше не нужен. В нем нужно
     * завершать работу всех сущностей, которые требуют явного завершения.
     */
    void dispose();
}
